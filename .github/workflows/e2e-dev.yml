name: E2E (dev only)

on:
  push:
    branches: [dev]
    paths:
      - "task-manager-front/**"
      - "task-manager-back/**"
      - ".github/workflows/e2e-dev.yml"
  pull_request:
    branches: [dev]
    paths:
      - "task-manager-front/**"
      - "task-manager-back/**"
      - ".github/workflows/e2e-dev.yml"
  workflow_dispatch:

concurrency:
  group: e2e-dev
  cancel-in-progress: true

jobs:
  e2e-smoke:
    name: Playwright smoke (Chromium)
    runs-on: ubuntu-latest
    env:
      # Use the SAME UID for curl (API) and Playwright (UI)
      E2E_UID: e2e-smoke-ci
      BOARD_NAME: E2E Smoke Board
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: task
          POSTGRES_PASSWORD: task
          POSTGRES_DB: taskmanager
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U task"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Backend: build & run on this runner ---
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      - name: Install Maven (if missing)
        run: |
          if ! command -v mvn >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y maven
          fi
          mvn -v

      - name: Build backend (skip unit tests)
        working-directory: task-manager-back
        run: mvn -B -DskipTests package

      - name: Run backend (connect to CI Postgres; permissive CORS)
        working-directory: task-manager-back
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://127.0.0.1:5432/taskmanager
          SPRING_DATASOURCE_USERNAME: task
          SPRING_DATASOURCE_PASSWORD: task
          SERVER_PORT: 8080
          # Allow IPv4 localhost, 'localhost', and IPv6 localhost
          CORS_ALLOWED_ORIGINS: http://127.0.0.1:4200,http://localhost:4200,http://[::1]:4200
          # Safer schema bootstrapping for ephemeral DB
          SPRING_JPA_HIBERNATE_DDL_AUTO: update
        run: |
          nohup java -jar target/*.jar > ../backend.log 2>&1 &

          sudo apt-get update && sudo apt-get install -y curl

          # Robust readiness: TCP -> Spring "Started ..." -> real HTTP with header
          timeout 210 bash -c '
            echo "[wait] TCP 8080..."
            for i in {1..90}; do
              (echo > /dev/tcp/127.0.0.1/8080) >/dev/null 2>&1 && break
              sleep 2
            done

            echo "[wait] Spring started log..."
            for i in {1..90}; do
              grep -q "Started .* in .* seconds" ../backend.log && break
              sleep 2
            done || true

            echo "[wait] HTTP probe /api/v1/boards..."
            for i in {1..60}; do
              code=$(curl -s -o /dev/null -w "%{http_code}" \
                -H "X-Client-Id: '"$E2E_UID"'" http://127.0.0.1:8080/api/v1/boards || true)
              # Accept any 2xx–4xx (reject 000 or 5xx)
              if [ "$code" -ge 200 ] && [ "$code" -lt 500 ]; then
                echo "[ready] backend HTTP $code"
                exit 0
              fi
              sleep 2
            done

            echo "::error::Backend not ready. Tail logs:"
            tail -n 200 ../backend.log
            exit 1
          '

      - name: API sanity (GET → POST → GET) with same UID
        env:
          E2E_UID: ${{ env.E2E_UID }}
          BOARD_NAME: ${{ env.BOARD_NAME }}
        run: |
          echo "GET /boards (expect 204 or 200)"
          curl -i -H "X-Client-Id: $E2E_UID" http://127.0.0.1:8080/api/v1/boards || true
          echo
          echo "POST /boards (create $BOARD_NAME)"
          curl -i -H "X-Client-Id: $E2E_UID" -H "Content-Type: application/json" \
               -d "{\"name\":\"$BOARD_NAME\",\"position\":0}" \
               http://127.0.0.1:8080/api/v1/boards || true
          echo
          echo "GET /boards (after create)"
          curl -i -H "X-Client-Id: $E2E_UID" http://127.0.0.1:8080/api/v1/boards || true

      # --- Frontend + Playwright ---
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: task-manager-front/package-lock.json

      - name: Install frontend deps
        working-directory: task-manager-front
        run: npm ci

      - name: Install Playwright browsers
        working-directory: task-manager-front
        run: npx playwright install --with-deps

      - name: Build frontend (Angular CI config -> API http://127.0.0.1:8080)
        working-directory: task-manager-front
        run: npx ng build --configuration ci

      - name: Verify built API URL (diagnostic)
        working-directory: task-manager-front
        run: |
          if ! grep -R "http://127.0.0.1:8080/api/v1" -n dist/task-manager-front/browser >/dev/null 2>&1; then
            echo "::warning::API URL string not found in build output. If the app sets it dynamically, ignore this."
          else
            echo "[ok] Found http://127.0.0.1:8080/api/v1 in build output."
          fi

      - name: Serve dist and wait
        working-directory: task-manager-front
        run: |
          npx http-server dist/task-manager-front/browser -p 4200 -a 127.0.0.1 >/dev/null 2>&1 &
          for i in {1..60}; do
            curl -fsS http://127.0.0.1:4200 >/dev/null && break
            sleep 2
          done

      - name: Run smoke (@smoke)
        env:
          CI: "true"
          BASE_URL: http://127.0.0.1:4200
          API_BASE_URL: http://127.0.0.1:8080/api/v1
          E2E_UID: ${{ env.E2E_UID }}
          BOARD_NAME: ${{ env.BOARD_NAME }}
        working-directory: task-manager-front
        run: npx playwright test --project=chromium --grep @smoke --reporter=html

      # Artifacts for debugging
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: task-manager-front/playwright-report
          retention-days: 7

      - name: Upload test results (videos, traces)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: task-manager-front/test-results
          retention-days: 7

      - name: Upload backend log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-log
          path: backend.log
          retention-days: 7
